{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "611531f6_3208fd89",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2024-04-04T15:08:43Z",
      "side": 1,
      "message": "Love this idea, should make it way easier to compare things when we change device-common\u0027s factory generation script",
      "revId": "bfb5e3b2013e224ee8c4cd66cfec1ef3151143b1",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f20f4c18_077bc037",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-04-04T15:14:46Z",
      "side": 1,
      "message": "Another thought I had was that we could in the future just use this directly.\n\nThe generation script simply updates these, and is run before hand. Reviewed.\n\nThen the actual factory image creation just copies these over.\n\nHowever, I quickly see an issue with that - due to the bootloader version contained in the filenames and thus the scripts, and also the image filename - it\u0027d have to be updated every single time. \n\nOh well, we\u0027ll just use it for comparison",
      "parentUuid": "611531f6_3208fd89",
      "revId": "bfb5e3b2013e224ee8c4cd66cfec1ef3151143b1",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Builds",
        "description": {
          "value": "Make sure it builds. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Builds\u003dMAX AND -label:Builds\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Builds\u003d0 AND (label:Works\u003dMAX OR label:Bypass-Verification\u003dMAX)"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Builds=MAX AND -label:Builds=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Builds=MAX","label:Builds=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Builds=0 AND (label:Works=MAX OR label:Bypass-Verification=MAX)"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Bypass-Verification=MAX","label:Builds=0"],"failingAtoms":["label:Works=MAX"]}
      },
      "patchSetCommitId": "bfb5e3b2013e224ee8c4cd66cfec1ef3151143b1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "bfb5e3b2013e224ee8c4cd66cfec1ef3151143b1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Works",
        "description": {
          "value": "Make sure it works. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Works\u003dMAX AND -label:Works\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Works\u003d0 AND label:Bypass-Verification\u003dMAX"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Works=MAX AND -label:Works=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Works=MAX","label:Works=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Works=0 AND label:Bypass-Verification=MAX"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Bypass-Verification=MAX","label:Works=0"],"failingAtoms":[]}
      },
      "patchSetCommitId": "bfb5e3b2013e224ee8c4cd66cfec1ef3151143b1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}